/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package subscriber;


import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONObject;
import subscriber.AplicationState;

import javax.swing.*;

/**
 *
 * @author ADMIN
 */
public class SensorDetail {
    protected String data;
    public String receive;
    public JFrame jFrame;

    /**
     * Creates new form DataDetailSensor
     */

    public SensorDetail() throws IOException {
        System.out.println(AplicationState.state);
        initComponents();
//        while(true) {
//            senMessage();
//        }

    }

    public SensorDetail(String data) throws IOException {
        this.data = data;
        System.out.println("deail "+this.data);
        System.out.println(AplicationState.state);
        initComponents();
//        while(true) {
//            senMessage();
//        }
    }

    public void senMessage() throws IOException {
        if (AplicationState.state == AplicationState.State.WAIT_DATA) {
            receive = AplicationState.recBuff.readUTF();
            System.out.println("FROM SERVER test: " + receive);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() throws IOException {
        jFrame = new JFrame("Sensor Detail");
        jFrame.setSize(600,500);
        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jFrame.addWindowListener (new WindowAdapter() {
            public void windowClosing (WindowEvent e) {
                try {
                    AplicationState.connection.close();
                    AplicationState.sentBuff.close();
                    AplicationState.recBuff.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                jFrame.dispose();
            }
        });


        ArrayList<String> datas = new ArrayList<String>();
        ArrayList<String> temperature = new ArrayList<String>();
        ArrayList<String> asdfl = new ArrayList<String>();
        ArrayList<JLabel> jLabels = new ArrayList<JLabel>();
        JSONObject myjson = new JSONObject(this.data);
        JSONArray the_json_array = myjson.getJSONArray("data");
        System.out.println(the_json_array);
        int size = the_json_array.length();
        for (int i=0; i<size; i++) {
            String s = the_json_array.getString(i);
            JSONObject MACS = new JSONObject(s);
            datas.add(MACS.getString("data"));
            temperature.add(MACS.getString("temperature"));
            asdfl.add(MACS.getString("asdfl"));
            JLabel jl = new JLabel();
            jl.setText("<html>"+MACS.getString("data")+"<br>"+MACS.getString("temperature")+"<br>"+MACS.getString("asdfl"));
            jLabels.add(jl);
        }
        JLabel jLabel = new JLabel("Du lieu cua thiet bi");
        jLabel.setBounds(230,20,150,50);
        jFrame.add(jLabel, BorderLayout.NORTH);

        int x_chan = 80;
        int y_chan = 80;
        int x_le = 300;
        int y_le = 80;
        int y_value = 80;
        for(int i=0; i<jLabels.size(); i++) {
//            String s = macs.get(i);
            jLabels.get(i).setHorizontalAlignment(SwingConstants.CENTER);
            jFrame.add(jLabels.get(i), BorderLayout.CENTER);
            if(i%2==0) {
                y_chan = y_chan+y_value*(i/2);
                jLabels.get(i).setBounds(x_chan,y_chan,170,50);
            }
            else {
                y_le = y_le+y_value*(i/2);
                jLabels.get(i).setBounds(x_le,y_le,170,50);
            }
        }
        jFrame.setLayout(null);
        jFrame.setVisible(true);

    }// </editor-fold>

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        new SensorDetail();

    }

}
