/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package subscriber;

import org.json.JSONObject;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.lang.reflect.Array;
import java.net.Socket;
import java.util.concurrent.ThreadLocalRandom;

import subscriber.AplicationState;

/**
 * @author ADMIN
 */
public class ListArea extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public static String HOSTNAME = "localhost";
    public static int PORT = 8080;
    public final static int sensor = 0;
    public String[] MAC = {"84:64:20:46:32:fe", "44:29:06:e1:e1:07", "d5:95:45:8c:95:de", "af:ad:42:69:98:a6", "4e:a8:51:59:85:61",
            "1b:8c:47:f2:fc:d9", "d5:2a:2f:e2:62:28", "f9:27:18:8a:ae:06", "5d:0f:e0:dd:82:3b", "81:c0:bf:73:79:3f"};
    public String receive;
    public String sendDatatoListSensor;

    public ListArea() {

        try {
            int index = ThreadLocalRandom.current().nextInt(0, 9 + 1);
            JSONObject jo = new JSONObject();
            jo.put("sensor", sensor);
            jo.put("MAC", MAC[index]);
            AplicationState.sentBuff.writeUTF(jo.toString());
            receive = AplicationState.recBuff.readUTF();
            AplicationState.state = AplicationState.State.GET_SENSORS;
            System.out.println("FROM SERVER: " + receive);
        } catch (IOException ex) {
            System.err.println(ex);
        }

        initComponents();
    }

    public String getSendDatatoListSensor() {
        return sendDatatoListSensor;
    }

    public String sendMessage(String location) throws IOException {
        String result = "";
        if (AplicationState.state == AplicationState.State.GET_SENSORS) {
            JSONObject obj = new JSONObject();
            obj.put("location", location);
            String jsonText = obj.toString();
            System.out.println(jsonText);
            AplicationState.sentBuff.writeUTF(jsonText);
            receive = AplicationState.recBuff.readUTF();
            result = receive;
        }
        return result;
    }


    public String sendData(String s) {
        return s;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
//                System.out.println("close");
                try {
                    AplicationState.connection.close();
                    AplicationState.sentBuff.close();
                    AplicationState.recBuff.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                dispose();
            }
        });
        jButton1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        caugiay = new javax.swing.JButton();
        thanhxuan = new javax.swing.JButton();
        badinh = new javax.swing.JButton();
        hadong = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("                       Du an lap trinh mang");

        caugiay.setText("Cau Giay");
        caugiay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    caugiayMouseClicked(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        caugiay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    caugiayActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        thanhxuan.setText("Thanh Xuan");
        thanhxuan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    thanhxuanMouseClicked(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        thanhxuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    thanhxuanActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        badinh.setText("Ba Dinh");
        badinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    badinhMouseClicked(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        badinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    badinhActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        hadong.setText("Ha Dong");
        hadong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    hadongMouseClicked(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        hadong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    hadongActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(151, 151, 151)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(160, 160, 160)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(caugiay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(thanhxuan, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                                        .addComponent(badinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(hadong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap(171, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(caugiay)
                                .addGap(18, 18, 18)
                                .addComponent(thanhxuan)
                                .addGap(18, 18, 18)
                                .addComponent(badinh)
                                .addGap(18, 18, 18)
                                .addComponent(hadong)
                                .addContainerGap(202, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void caugiayActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // TODO add your handling code here:
        String location = "Cau Giay";
        String a = sendMessage(location);
        ListSensor listSensor = new ListSensor(a);
//        listSensor.setVisible(true);
        this.dispose();
    }

    private void caugiayMouseClicked(java.awt.event.MouseEvent evt) throws IOException {

    }

    private void thanhxuanMouseClicked(java.awt.event.MouseEvent evt) throws IOException {

    }

    private void badinhMouseClicked(java.awt.event.MouseEvent evt) throws IOException {
        String location = "Ba Dinh";
        String a = sendMessage(location);
        ListSensor listSensor = new ListSensor(a);
        listSensor.setData(a);
//        listSensor.setVisible(true);
        this.dispose();
    }

    private void hadongMouseClicked(java.awt.event.MouseEvent evt) throws IOException {
        // TODO add your handling code here:
        String location = "Ha Dong";
        String a = sendMessage(location);
        ListSensor listSensor = new ListSensor(a);
        listSensor.setData(a);
        this.dispose();
    }

    private void thanhxuanActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // TODO add your handling code here:
        String location = "Thanh Xuan";
        String a = sendMessage(location);
        ListSensor listSensor = new ListSensor(a);
        this.dispose();
    }

    private void badinhActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // TODO add your handling code here:
        String location = "Ba Dinh";
        String a = sendMessage(location);
        ListSensor listSensor = new ListSensor(a);
        this.dispose();
    }

    private void hadongActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // TODO add your handling code here:
        String location = "Ha Dong";
        String a = sendMessage(location);
        ListSensor listSensor = new ListSensor(a);
        this.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListArea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton badinh;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton caugiay;
    private javax.swing.JButton hadong;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton thanhxuan;
    // End of variables declaration
}